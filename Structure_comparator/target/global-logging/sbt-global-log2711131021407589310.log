[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Denis_Lomakov\AppData\Local\Temp\idea7.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Denis_Lomakov\AppData\Local\Temp\idea7.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.6 (Temurin Java 1.8.0_382)
[debug]       Load.loadUnit: plugins took 640.1329ms
[debug]       Load.loadUnit: defsScala took 0.5769ms
[debug] [Loading] Scanning directory C:\Users\Denis_Lomakov\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Denis_Lomakov\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 120.3414 ms
[debug]           Load.resolveProject(global-plugins) took 203.7806ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Denis_Lomakov\.sbt\1.0\plugins, plugins: List(<none>))) took 453.5207ms
[debug] [Loading] Done in C:\Users\Denis_Lomakov\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 751.5266ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.2464ms
[debug]     Load.loadUnit(file:/C:/Users/Denis_Lomakov/.sbt/1.0/plugins/, ...) took 1409.3587ms
[debug]   Load.apply: load took 2358.0514ms
[debug]   Load.apply: resolveProjects took 121.8115ms
[debug]   Load.apply: finalTransforms took 327.2858ms
[debug]   Load.apply: config.delegates took 71.0016ms
[debug]   Load.apply: Def.make(settings)... took 3892.7809ms
[debug]   Load.apply: structureIndex took 648.8651ms
[debug]   Load.apply: mkStreams took 2.5703ms
[info] loading global plugins from C:\Users\Denis_Lomakov\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 16442.6096ms
[debug]           Load.loadUnit: plugins took 86.001ms
[debug]           Load.loadUnit: defsScala took 0.0817ms
[debug] [Loading] Scanning directory C:\DEV\de_tools\Structure_comparator\project
[debug]             Load.loadUnit: mkEval took 32.7687ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\DEV\de_tools\Structure_comparator\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.0618 ms
[info] loading settings for project structure_comparator-build from idea7.sbt ...
[debug]               Load.resolveProject(structure_comparator-build) took 14.2369ms
[debug]             Load.loadTransitive: finalizeProject(Project(id structure_comparator-build, base: C:\DEV\de_tools\Structure_comparator\project, plugins: List(<none>))) took 32.0769ms
[debug] [Loading] Done in C:\DEV\de_tools\Structure_comparator\project, returning: (structure_comparator-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 13992.5636ms
[debug]           Load.loadUnit: cleanEvalClasses took 29.2427ms
[debug]         Load.loadUnit(file:/C:/DEV/de_tools/Structure_comparator/project/, ...) took 14110.1364ms
[debug]       Load.apply: load took 14113.7593ms
[debug]       Load.apply: resolveProjects took 0.206ms
[debug]       Load.apply: finalTransforms took 52.3047ms
[debug]       Load.apply: config.delegates took 0.7186ms
[debug]       Load.apply: Def.make(settings)... took 260.9068ms
[debug]       Load.apply: structureIndex took 66.8788ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\DEV\de_tools\Structure_comparator\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 21225.236ms
[debug]     Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\DEV\de_tools\Structure_comparator
[debug]       Load.loadUnit: mkEval took 0.7008ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 27.2398 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 209.2155ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\DEV\de_tools\Structure_comparator, plugins: List(<none>))) took 241.4172ms
[debug] [Loading] Done in C:\DEV\de_tools\Structure_comparator, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4040.9427ms
[debug]     Load.loadUnit: cleanEvalClasses took 59.0303ms
[debug]   Load.loadUnit(file:/C:/DEV/de_tools/Structure_comparator/, ...) took 25326.3354ms
[debug] Load.apply: load took 25335.7637ms
[debug] Load.apply: resolveProjects took 0.1329ms
[debug] Load.apply: finalTransforms took 73.4118ms
[debug] Load.apply: config.delegates took 0.5641ms
[debug] Load.apply: Def.make(settings)... took 144.0945ms
[debug] Load.apply: structureIndex took 75.809ms
[debug] Load.apply: mkStreams took 0.0278ms
[info] set current project to Structure_comparator (in build file:/C:/DEV/de_tools/Structure_comparator/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64619 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64619, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Structure_comparator (in build file:/C:/DEV/de_tools/Structure_comparator/)
[debug] > Exec(idea-shell, None, None)
